type Query {
  status: String!
  spaces: [Space!]!
  foods: [Food!]!
  recipes: [Recipe!]!
}

type Mutation {
  createSpace(name: String!, storeAs: StorageMethod!, icon: String): Space!
  editSpace(id: ID, name: String, storeAs: StorageMethod, icon: String): Space!
  deleteSpace(id: ID!): Space!
  createFood(name: String!): Food!
  deleteFood(id: ID!): Food!
  addFoodInSpace(id: ID, validThru: String!, foodID: ID): Space!
  createRecipe(name: String!, ingredients: [IngredientInput]): Recipe!
  deleteRecipe(id: ID!): Recipe!
  editRecipe(id: ID, name: String): Recipe!
}

type Space {
  id: ID!
  name: String!
  storeAs: StorageMethod!
  foods: [StoredFood!]!
  icon: String
}

enum StorageMethod {
  FROZEN
  COLD
  NATURAL
}

type StoredFood {
  id: ID!
  food: Food!
  validThru: String!
}

type Food {
  id: ID!
  name: String!
}

enum Measure {
  ML
  GRAM
}

type Ingredient {
  id: ID!
  amount: Int
  measure: Measure!
  food: Food!
}

input IngredientInput {
  amount: Int!
  measure: Measure!
  foodID: ID!
}

type Recipe {
  id: ID!
  name: String!
  ingredients: [Ingredient!]!
}
